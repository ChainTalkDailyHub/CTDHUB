const https = require('https')
const http = require('http')

console.log('üîç DIAGN√ìSTICO DO DOM√çNIO: chaintalkdailyhub.com')
console.log('==============================================')

async function checkDomainStatus() {
  // Teste HTTPS
  console.log('\nüîí Testando HTTPS...')
  try {
    await new Promise((resolve, reject) => {
      const req = https.get('https://chaintalkdailyhub.com', (res) => {
        console.log('‚úÖ HTTPS Status:', res.statusCode)
        console.log('‚úÖ Headers SSL:', {
          'strict-transport-security': res.headers['strict-transport-security'],
          'content-security-policy': res.headers['content-security-policy']
        })
        resolve()
      })
      
      req.on('error', (err) => {
        console.log('‚ùå HTTPS Error:', err.message)
        reject(err)
      })
      
      req.setTimeout(10000, () => {
        console.log('‚è∞ HTTPS Timeout')
        req.destroy()
        reject(new Error('Timeout'))
      })
    })
  } catch (error) {
    console.log('‚ùå HTTPS falhou:', error.message)
  }

  // Teste HTTP
  console.log('\nüåê Testando HTTP...')
  try {
    await new Promise((resolve, reject) => {
      const req = http.get('http://chaintalkdailyhub.com', (res) => {
        console.log('‚úÖ HTTP Status:', res.statusCode)
        console.log('‚úÖ Location header:', res.headers.location)
        resolve()
      })
      
      req.on('error', (err) => {
        console.log('‚ùå HTTP Error:', err.message)
        reject(err)
      })
      
      req.setTimeout(10000, () => {
        console.log('‚è∞ HTTP Timeout')
        req.destroy()
        reject(new Error('Timeout'))
      })
    })
  } catch (error) {
    console.log('‚ùå HTTP falhou:', error.message)
  }

  console.log('\nüìã SOLU√á√ïES PARA "NOT SECURE":')
  console.log('==============================')
  console.log('1. ‚úÖ Certificado SSL: Verificar se est√° ativo no Netlify')
  console.log('2. ‚úÖ HTTPS Redirect: For√ßar redirecionamento HTTP ‚Üí HTTPS')
  console.log('3. ‚úÖ HSTS Headers: Adicionar cabe√ßalhos de seguran√ßa')
  console.log('4. ‚úÖ Mixed Content: Verificar se todos os recursos usam HTTPS')

  console.log('\nüîß PR√ìXIMOS PASSOS:')
  console.log('==================')
  console.log('1. Acesse: https://app.netlify.com/projects/extraordinary-treacle-1bc553')
  console.log('2. V√° em "Domain settings"')
  console.log('3. Verifique se chaintalkdailyhub.com tem SSL ativo')
  console.log('4. Ative "Force HTTPS" se necess√°rio')
  console.log('5. Aguarde propaga√ß√£o DNS (at√© 24h)')
}

checkDomainStatus()