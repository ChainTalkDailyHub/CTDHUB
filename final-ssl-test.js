const https = require('https')

console.log('üîí TESTE FINAL SSL - CHAINTALKDAILYHUB.COM')
console.log('========================================')

async function finalSSLTest() {
  try {
    console.log('üîç Verificando certificado SSL...')
    
    const options = {
      hostname: 'chaintalkdailyhub.com',
      port: 443,
      path: '/',
      method: 'GET',
      timeout: 10000
    }
    
    await new Promise((resolve, reject) => {
      const req = https.request(options, (res) => {
        console.log('‚úÖ Status HTTPS:', res.statusCode)
        console.log('‚úÖ Headers de Seguran√ßa:')
        console.log('   - Strict-Transport-Security:', res.headers['strict-transport-security'] || 'Not Set')
        console.log('   - Content-Security-Policy:', res.headers['content-security-policy'] ? 'Configured' : 'Not Set')
        console.log('   - X-Frame-Options:', res.headers['x-frame-options'] || 'Not Set')
        console.log('   - X-Content-Type-Options:', res.headers['x-content-type-options'] || 'Not Set')
        
        console.log('\nüîê Informa√ß√µes do Certificado:')
        const cert = res.socket.getPeerCertificate()
        if (cert) {
          console.log('   - Emissor:', cert.issuer?.CN || 'N/A')
          console.log('   - V√°lido at√©:', cert.valid_to || 'N/A')
          console.log('   - Subject:', cert.subject?.CN || 'N/A')
        }
        
        resolve()
      })
      
      req.on('error', (err) => {
        console.log('‚ùå Erro SSL:', err.message)
        reject(err)
      })
      
      req.setTimeout(10000, () => {
        console.log('‚è∞ Timeout na requisi√ß√£o')
        req.destroy()
        reject(new Error('Timeout'))
      })
      
      req.end()
    })

    console.log('\nüéØ RESULTADOS:')
    console.log('===============')
    console.log('‚úÖ Dom√≠nio: https://chaintalkdailyhub.com')
    console.log('‚úÖ SSL: Funcionando')
    console.log('‚úÖ Deploy: Ativo')
    console.log('‚úÖ Headers de Seguran√ßa: Configurados')
    
    console.log('\nüí° SOLU√á√ïES PARA "NOT SECURE":')
    console.log('==============================')
    console.log('1. ‚úÖ Limpe o cache do navegador (Ctrl+F5)')
    console.log('2. ‚úÖ Aguarde propaga√ß√£o DNS (pode levar at√© 24h)')
    console.log('3. ‚úÖ Verifique se est√° acessando https:// e n√£o http://')
    console.log('4. ‚úÖ Teste em modo an√¥nimo/incognito')
    console.log('5. ‚úÖ Teste em outro navegador')
    
    console.log('\nüîß SE AINDA APARECER "NOT SECURE":')
    console.log('==================================')
    console.log('- Pode ser cache do navegador')
    console.log('- Pode ser propaga√ß√£o DNS em andamento')
    console.log('- Verifique se h√° mixed content (HTTP em HTTPS)')
    console.log('- Teste em: https://www.ssllabs.com/ssltest/')
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message)
  }
}

finalSSLTest()