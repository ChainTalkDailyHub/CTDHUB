/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export declare namespace CTDHUB_BINNOAI {
  export type AssessmentStruct = {
    user: AddressLike;
    assessmentDate: BigNumberish;
    pillarLevelsPacked: BigNumberish;
    criPercent: BigNumberish;
    questionnaireVersion: BigNumberish;
    numQuestions: BigNumberish;
    contentHash: BytesLike;
    uri: string;
  };

  export type AssessmentStructOutput = [
    user: string,
    assessmentDate: bigint,
    pillarLevelsPacked: bigint,
    criPercent: bigint,
    questionnaireVersion: bigint,
    numQuestions: bigint,
    contentHash: string,
    uri: string
  ] & {
    user: string;
    assessmentDate: bigint;
    pillarLevelsPacked: bigint;
    criPercent: bigint;
    questionnaireVersion: bigint;
    numQuestions: bigint;
    contentHash: string;
    uri: string;
  };

  export type AssessmentInputStruct = {
    user: AddressLike;
    assessmentDate: BigNumberish;
    criPercent: BigNumberish;
    questionnaireVersion: BigNumberish;
    numQuestions: BigNumberish;
    pillarLevels: BigNumberish[];
    contentHash: BytesLike;
    uri: string;
  };

  export type AssessmentInputStructOutput = [
    user: string,
    assessmentDate: bigint,
    criPercent: bigint,
    questionnaireVersion: bigint,
    numQuestions: bigint,
    pillarLevels: bigint[],
    contentHash: string,
    uri: string
  ] & {
    user: string;
    assessmentDate: bigint;
    criPercent: bigint;
    questionnaireVersion: bigint;
    numQuestions: bigint;
    pillarLevels: bigint[];
    contentHash: string;
    uri: string;
  };
}

export interface CTDHUB_BINNOAIInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "NAME_HASH"
      | "admin"
      | "getAssessment"
      | "getPillarLevels"
      | "getUserAssessments"
      | "packPillarLevels"
      | "recordAssessment"
      | "seenContentHash"
      | "setWriter"
      | "unpackPillarLevels"
      | "writer"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "AssessmentRecorded" | "WriterSet"
  ): EventFragment;

  encodeFunctionData(functionFragment: "NAME_HASH", values?: undefined): string;
  encodeFunctionData(functionFragment: "admin", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getAssessment",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPillarLevels",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserAssessments",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "packPillarLevels",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "recordAssessment",
    values: [CTDHUB_BINNOAI.AssessmentInputStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "seenContentHash",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setWriter",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "unpackPillarLevels",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "writer", values: [AddressLike]): string;

  decodeFunctionResult(functionFragment: "NAME_HASH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "admin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAssessment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPillarLevels",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserAssessments",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "packPillarLevels",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recordAssessment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "seenContentHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setWriter", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unpackPillarLevels",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "writer", data: BytesLike): Result;
}

export namespace AssessmentRecordedEvent {
  export type InputTuple = [
    id: BytesLike,
    user: AddressLike,
    criPercent: BigNumberish,
    questionnaireVersion: BigNumberish,
    numQuestions: BigNumberish,
    contentHash: BytesLike,
    uri: string
  ];
  export type OutputTuple = [
    id: string,
    user: string,
    criPercent: bigint,
    questionnaireVersion: bigint,
    numQuestions: bigint,
    contentHash: string,
    uri: string
  ];
  export interface OutputObject {
    id: string;
    user: string;
    criPercent: bigint;
    questionnaireVersion: bigint;
    numQuestions: bigint;
    contentHash: string;
    uri: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WriterSetEvent {
  export type InputTuple = [who: AddressLike, enabled: boolean];
  export type OutputTuple = [who: string, enabled: boolean];
  export interface OutputObject {
    who: string;
    enabled: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface CTDHUB_BINNOAI extends BaseContract {
  connect(runner?: ContractRunner | null): CTDHUB_BINNOAI;
  waitForDeployment(): Promise<this>;

  interface: CTDHUB_BINNOAIInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  NAME_HASH: TypedContractMethod<[], [string], "view">;

  admin: TypedContractMethod<[], [string], "view">;

  getAssessment: TypedContractMethod<
    [id: BytesLike],
    [CTDHUB_BINNOAI.AssessmentStructOutput],
    "view"
  >;

  getPillarLevels: TypedContractMethod<[id: BytesLike], [bigint[]], "view">;

  getUserAssessments: TypedContractMethod<
    [user: AddressLike],
    [string[]],
    "view"
  >;

  packPillarLevels: TypedContractMethod<
    [levels: BigNumberish[]],
    [bigint],
    "view"
  >;

  recordAssessment: TypedContractMethod<
    [a: CTDHUB_BINNOAI.AssessmentInputStruct],
    [string],
    "nonpayable"
  >;

  seenContentHash: TypedContractMethod<[arg0: BytesLike], [boolean], "view">;

  setWriter: TypedContractMethod<
    [who: AddressLike, enabled: boolean],
    [void],
    "nonpayable"
  >;

  unpackPillarLevels: TypedContractMethod<
    [packed: BigNumberish],
    [bigint[]],
    "view"
  >;

  writer: TypedContractMethod<[arg0: AddressLike], [boolean], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "NAME_HASH"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "admin"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getAssessment"
  ): TypedContractMethod<
    [id: BytesLike],
    [CTDHUB_BINNOAI.AssessmentStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getPillarLevels"
  ): TypedContractMethod<[id: BytesLike], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "getUserAssessments"
  ): TypedContractMethod<[user: AddressLike], [string[]], "view">;
  getFunction(
    nameOrSignature: "packPillarLevels"
  ): TypedContractMethod<[levels: BigNumberish[]], [bigint], "view">;
  getFunction(
    nameOrSignature: "recordAssessment"
  ): TypedContractMethod<
    [a: CTDHUB_BINNOAI.AssessmentInputStruct],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "seenContentHash"
  ): TypedContractMethod<[arg0: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "setWriter"
  ): TypedContractMethod<
    [who: AddressLike, enabled: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "unpackPillarLevels"
  ): TypedContractMethod<[packed: BigNumberish], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "writer"
  ): TypedContractMethod<[arg0: AddressLike], [boolean], "view">;

  getEvent(
    key: "AssessmentRecorded"
  ): TypedContractEvent<
    AssessmentRecordedEvent.InputTuple,
    AssessmentRecordedEvent.OutputTuple,
    AssessmentRecordedEvent.OutputObject
  >;
  getEvent(
    key: "WriterSet"
  ): TypedContractEvent<
    WriterSetEvent.InputTuple,
    WriterSetEvent.OutputTuple,
    WriterSetEvent.OutputObject
  >;

  filters: {
    "AssessmentRecorded(bytes32,address,uint16,uint16,uint8,bytes32,string)": TypedContractEvent<
      AssessmentRecordedEvent.InputTuple,
      AssessmentRecordedEvent.OutputTuple,
      AssessmentRecordedEvent.OutputObject
    >;
    AssessmentRecorded: TypedContractEvent<
      AssessmentRecordedEvent.InputTuple,
      AssessmentRecordedEvent.OutputTuple,
      AssessmentRecordedEvent.OutputObject
    >;

    "WriterSet(address,bool)": TypedContractEvent<
      WriterSetEvent.InputTuple,
      WriterSetEvent.OutputTuple,
      WriterSetEvent.OutputObject
    >;
    WriterSet: TypedContractEvent<
      WriterSetEvent.InputTuple,
      WriterSetEvent.OutputTuple,
      WriterSetEvent.OutputObject
    >;
  };
}
