#!/usr/bin/env node

// Script para configurar vari√°veis de ambiente no Netlify
console.log('üöÄ CONFIGURA√á√ÉO DE DEPLOY NETLIFY - CTDHUB');
console.log('=' .repeat(80));

console.log('\nüîê VARI√ÅVEIS DE AMBIENTE NECESS√ÅRIAS:');
console.log('\n1. OPENAI_API_KEY (Obrigat√≥ria para BINNO AI):');
console.log('   Descri√ß√£o: Chave da API OpenAI para an√°lises de IA');
console.log('   Valor: sk-proj-... (sua chave OpenAI)');
console.log('   Seguran√ßa: CR√çTICA - mant√©m an√°lises funcionando');

console.log('\n2. BURN_AMOUNT (Sistema de Queima):');
console.log('   Descri√ß√£o: Quantidade de tokens a queimar por usu√°rio');
console.log('   Valor: 1000');
console.log('   Seguran√ßa: IMPORTANTE - controla quantidade queimada');

console.log('\n3. BSC_RPC_URL (Blockchain BSC):');
console.log('   Descri√ß√£o: URL do n√≥ RPC da Binance Smart Chain');
console.log('   Valor: https://bsc-dataseed1.binance.org/');
console.log('   Seguran√ßa: M√âDIA - acesso √† blockchain');

console.log('\n4. TREASURY_PRIVATE_KEY (Carteira Treasury):');
console.log('   Descri√ß√£o: Chave privada da carteira que executa burns');
console.log('   Valor: 0x... (chave privada da carteira treasury)');
console.log('   Seguran√ßa: CR√çTICA - controla fundos');

console.log('\n5. CTD_TOKEN_ADDRESS (Contrato CTD):');
console.log('   Descri√ß√£o: Endere√ßo do contrato do token CTD na BSC');
console.log('   Valor: 0x... (endere√ßo do contrato)');
console.log('   Seguran√ßa: IMPORTANTE - define qual token queimar');

console.log('\nüìã PASSO A PASSO PARA CONFIGURAR NO NETLIFY:');
console.log('\n1. Acesse https://app.netlify.com/');
console.log('2. V√° para seu site CTDHUB');
console.log('3. Site settings ‚Üí Environment variables');
console.log('4. Add variable para cada uma acima');
console.log('5. Deploy triggers ‚Üí Clear cache and deploy site');

console.log('\nüõ°Ô∏è  CONFIGURA√á√ïES DE SEGURAN√áA RECOMENDADAS:');

const securityConfig = {
  OPENAI_API_KEY: {
    required: true,
    secret: true,
    description: 'Chave OpenAI para BINNO AI - sem ela o sistema falha',
    example: 'sk-proj-...',
    risk: 'ALTO - sem esta chave, an√°lises de IA n√£o funcionam'
  },
  BURN_AMOUNT: {
    required: true,
    secret: false,
    description: 'Quantidade de tokens CTD a queimar por usu√°rio',
    example: '1000',
    risk: 'M√âDIO - controla economia do token'
  },
  BSC_RPC_URL: {
    required: true,
    secret: false,
    description: 'URL do n√≥ BSC para transa√ß√µes',
    example: 'https://bsc-dataseed1.binance.org/',
    risk: 'BAIXO - URL p√∫blica'
  },
  TREASURY_PRIVATE_KEY: {
    required: true,
    secret: true,
    description: 'Chave privada da carteira treasury para burns',
    example: '0x...',
    risk: 'CR√çTICO - acesso total aos fundos'
  },
  CTD_TOKEN_ADDRESS: {
    required: true,
    secret: false,
    description: 'Endere√ßo do contrato CTD Token',
    example: '0x...',
    risk: 'BAIXO - endere√ßo p√∫blico'
  }
};

console.log('\nüìä DETALHES DAS VARI√ÅVEIS:');
Object.entries(securityConfig).forEach(([key, config]) => {
  console.log(`\n${key}:`);
  console.log(`   Obrigat√≥ria: ${config.required ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
  console.log(`   Secreta: ${config.secret ? 'üîí SIM' : 'üîì N√ÉO'}`);
  console.log(`   Descri√ß√£o: ${config.description}`);
  console.log(`   Exemplo: ${config.example}`);
  console.log(`   Risco: ${config.risk}`);
});

console.log('\n‚ö†Ô∏è  AVISOS DE SEGURAN√áA:');
console.log('\nüî¥ TREASURY_PRIVATE_KEY:');
console.log('   - NUNCA compartilhe esta chave');
console.log('   - Use carteira dedicada apenas para burns');
console.log('   - Mantenha saldo m√≠nimo necess√°rio');
console.log('   - Monitore transa√ß√µes regularmente');

console.log('\nüü° OPENAI_API_KEY:');
console.log('   - Configure limites de uso na OpenAI');
console.log('   - Monitore custos regularmente');
console.log('   - Use apenas para CTDHUB');

console.log('\nüü¢ CONFIGURA√á√ÉO M√çNIMA PARA TESTE:');
console.log('   Para testar o sistema, voc√™ precisa pelo menos:');
console.log('   - OPENAI_API_KEY (para an√°lises funcionarem)');
console.log('   - BURN_AMOUNT=1000 (para quantidade correta)');

console.log('\nüéØ COMANDO PARA DEPLOY MANUAL:');
console.log('   git add . && git commit -m "deploy: ready for production" && git push');
console.log('   O Netlify detectar√° automaticamente e far√° o deploy');

console.log('\nüîç VERIFICA√á√ÉO P√ìS-DEPLOY:');
console.log('   1. Teste o BINNO AI: https://seu-site.netlify.app/binno-ai');
console.log('   2. Teste an√°lise: https://seu-site.netlify.app/questionnaire');
console.log('   3. Teste quiz: https://seu-site.netlify.app/quiz');
console.log('   4. Teste burn: Complete todos os m√≥dulos');

console.log('\nüì± URLs DE TESTE:');
console.log('   - Skill Compass: /.netlify/functions/binno-generate-question');
console.log('   - An√°lise Final: /.netlify/functions/binno-final-analysis');
console.log('   - Quiz Progress: /.netlify/functions/quiz-progress');
console.log('   - Burn System: /.netlify/functions/burn-on-completion');

console.log('\n' + '='.repeat(80));
console.log('‚úÖ CONFIGURA√á√ÉO COMPLETA PARA DEPLOY SEGURO');
console.log('üîó Configure as vari√°veis no Netlify e fa√ßa o deploy!');
console.log('=' .repeat(80));